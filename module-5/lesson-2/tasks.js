// 1. Реалізувати клас Employee, в якому будуть наступні властивості - ім'я (name) , вік (age), зарплата (salary).
// Зробіть так, щоб ці властивості заповнювалися при створенні об'єкта.
// Зробіть поле salary приватним та створіть геттери та сеттери для нього
// Зробіть клас Programmer, який буде успадкований від класу Employee, у якому буде властивість langs (список мов)
// Для класса Programmer перезапишите геттер для властивості salary. Хай він повертає властивість salary, помножене на 3.
// Створіть кілька екземплярів об'єкта Programmer, виведіть їх у консоль.

//-------------------------


// 2. Створіть класс товару Product, у якому будуть такі властивості:
//     - коротка назва;
//     - повна назва;
//     - опис
//     - ціна;
// (має також бути приватний унікальний артикул для товару);
//
// А також методи:
//     - розрахунок ціни (приватний, аргумент - кількість товарів, якщо більше 20 - тоді знижка на всю суму - 15 відсотків);
//     - отримання інформації про доставку (метод - приватний, аргументи - адреса, ціна за все замовлення. Ціна за доставку обраховується так –  1% від ціни,
//       якщо ціна більше 2000 - доставка безкоштовно);
//     - друк чеку (приватний, цей метод отримує об'єкт замовлення і виводить в консоль)
//     - замовлення товару ( публічний, розраховую ціну товару,доставки та генерує об'єкт замовлення
//       { адреса, товар, кількість, ціна за доставку, ціна за замовлення})
//

//-------------------------

// 3. Створіть клас Vehicle, у якому буде 4 властивості:
// - currentSpeed ( приватна )
// - maxSpeed ( статична )
// - year,
// - country
// - weight
// - метод info() { порожній }


// Створіть додаткові класи
// 1) Car (усі поля від Vehicle + type, name, model, wheels) + методами
// -info (описує поведінку авто),
// -travelTime( обраховує кількість часу яка потрібна для подолання відстані за швидкості currentSpeed,
//        відстань приходить параметром в сам метод )

// 2) AirPlane (усі поля від Vehicle + type, name, engine, private oldEngines) + методи)
// -info (описує поведінку літака),
// -updateEngine ( заміняє поточний двигун літака на той двигун, який прийшов параметром у метод, та додає старий двигун
//                 у приватне поле oldEngines )
// -showAllEngines ( виводить список усіх старих двигунів літака та поточного )


// 3) Ship (усі поля від Vehicle + type, name, engine, color, passengers: {name, age, ticket} [] ( приватне ) ) + методи)
// -info (описує поведінку корабля),
// -addPassenger ( якщо пасажира ще немає на борту – додати його у список passengers, якщо є вивести помилку )





//-------------------------
