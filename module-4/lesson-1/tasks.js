/*
  *
  * 1. Написати функцію-суматор всіх своїх параметрів.
  *
  * Функція приймає довільну кількість параметрів.
  * Однак кожен з них обов'язково має бути числом.
  *
  * Генерувати помилку, якщо:
  *   - Якщо функція була викликана менш ніж з двома аргументами;
  *   - Хоча один із аргументів не є допустимим числом (у помилці вказати його порядковий номер).
  *
  * Умови:
  *   - використовувати тип функції arrow function;
  *   - Використовувати об'єкт arguments заборонено.
  *   - Використати forEach
  *
  *
*/
//-------------------------


// 2. Написати функцію-логгер log, яка виводить у консоль повідомлення вказану кількість разів.
//
//  Функція має два параметри:
//       - Перший - рядковий тип, повідомлення для виведення;
//       - Другий - числовий тип, кількість виведення повідомлення.
//
//  Задати значення за ЗАМОВЧУВАННЯМ для обох параметрів:
//      - Для першого - «Empty message»;
//      - Для другого - 1;
//
//  Якщо перший аргумент (повідомлення) не передано - ЗА ЗАМОВЧУВАННЯМ присвоїти цьому аргументу - "Empty message"
//  Якщо другий аргумент (кількість разів) не переданий - ЗА ЗАМОВЧУВАННЯМ присвоїти цьому аргументу значення 1.

//  Умови:
//      - використовувати тип функції arrow function;

//-------------------------


/**
 *
 * 3. Написати функцію, яка повертає найбільше число, з переданих їй як аргументи під час виклику.
 *
 * Генерувати помилку, якщо:
 *  - Якщо функція була викликана менш ніж з двома аргументами;
 *  - Хоча один із аргументів не є допустимим числом (у помилці вказати його порядковий номер).
 *
 * Умови:
 *  - використовувати тип функції arrow function;
 *  - Обов'язково використовувати об'єкт Math.
 */


//-------------------------

// 4.Написати функцію applyFn, яка приймає на вхід 2 параметри:
//
// Масив із вхідними даними
// функцію, яку потрібно застосувати до кожного елемента масиву вхідних даних applyFn(dataArr, callback);

// Функція applyFn повинна повертати масив елментів, на яких було запущено callback


//-------------------------



// 5. Перепишіть калькулятор використовуючи колбек функції та arrow function



// const askForNumbers = () => {
//     const a = Number(prompt('Enter first number'))
//     const b = Number(prompt('Enter second number'))
//     return [a, b];
// }


// const askForOperation = (message = 'Enter operation') => prompt(message);


// const calculate = (mathOperations) => {

//     const [firstNumber, secondNumbers] = askForNumbers() // [1, 4]

//     const operation = askForOperation(`Enter math operation`)


//   switch(operation){
//       case "+":
//           return sum(firstNumber, secondNumbers);
//       case "-":
//           return minus(firstNumber, secondNumbers);
//       case "*":
//           return mult(firstNumber, secondNumbers);
//       case "/":
//           return div(firstNumber, secondNumbers);
//       default:
//           return "Operation is not valid";
//   }

// }




